{
  "Description":"Launch nested CloudFormation stack to provision and run AWS CodeDeploy",
  "AWSTemplateFormatVersion":"2010-09-09",
  "Parameters":{
    "S3Bucket":{
      "Type":"String",
      "Default":"aws-codedeploy-us-east-1",
      "Description":"The unique bucket name where deployment distribution is located"
    },
    "S3Key":{
      "Type":"String",
      "Default":"samples/latest/SampleApp_Linux.zip",
      "Description":"The unique bucket name where deployment distribution is located"
    },
    "TagKey":{
      "Type":"String",
      "Default":"Name",
      "Description":"The tag name that is associated with EC2 instances on which CodeDeploy agent is installed"
    },
    "TagValue":{
      "Description":"The tag value that identifies this as a target for deployments.",
      "Type":"String",
      "Default":"CodeDeployEC2Tag",
      "AllowedPattern":"[\\x20-\\x7E]*",
      "ConstraintDescription":"Can contain only ASCII characters."
    },
    "EC2KeyPairName":{
      "Description":"Name of an existing Amazon EC2 key pair to enable SSH or RDP access to the instances.",
      "Type":"AWS::EC2::KeyPair::KeyName",
      "MinLength":"1",
      "MaxLength":"255",
      "AllowedPattern":"[\\x20-\\x7E]*",
      "ConstraintDescription":"Can contain only ASCII characters."
    }
  },
  "Resources":{
    "CodeDeployEC2InstancesStack":{
      "Type":"AWS::CloudFormation::Stack",
      "Properties":{
        "TemplateURL":"http://s3.amazonaws.com/aws-codedeploy-us-east-1/templates/latest/CodeDeploy_SampleCF_Template.json",
        "TimeoutInMinutes":"60",
        "Parameters":{
          "TagValue":{
            "Ref":"TagValue"
          },
          "KeyPairName":{
            "Ref":"EC2KeyPairName"
          }
        }
      }
    },
    "MyApplication":{
      "Type":"AWS::CodeDeploy::Application",
      "DependsOn":"CodeDeployEC2InstancesStack"
    },
    "MyDeploymentGroup":{
      "Type":"AWS::CodeDeploy::DeploymentGroup",
      "DependsOn":"MyApplication",
      "Properties":{
        "ApplicationName":{
          "Ref":"MyApplication"
        },
        "Deployment":{
          "Description":"First time",
          "IgnoreApplicationStopFailures":"true",
          "Revision":{
            "RevisionType":"S3",
            "S3Location":{
              "Bucket":{
                "Ref":"S3Bucket"
              },
              "BundleType":"Zip",
              "Key":{
                "Ref":"S3Key"
              }
            }
          }
        },
        "Ec2TagFilters":[
          {
            "Key":{
              "Ref":"TagKey"
            },
            "Value":{
              "Ref":"TagValue"
            },
            "Type":"KEY_AND_VALUE"
          }
        ],
        "ServiceRoleArn":{
          "Fn::GetAtt":[
            "CodeDeployEC2InstancesStack",
            "Outputs.CodeDeployTrustRoleARN"
          ]
        }
      }
    }
  },
  "Outputs":{
    "MyAWSAccountId":{
      "Value":{
        "Ref":"AWS::AccountId"
      }
    }
  }
}
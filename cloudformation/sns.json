{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"Create SNS and Lambda resources ** This template creates one or more Amazon resources. You will be billed for the AWS resources used if you create a stack from this template.",
  "Parameters":{
    "S3Bucket":{
      "Type":"String",
      "Description":"S3 bucket to use for artifacts. Just bucket Name; not URL. IAM user should have access to the bucket.",
      "Default":"stelligent-training-public"
    },
    "S3Key":{
      "Type":"String",
      "Description":"S3 key within S3Bucket.",
      "Default":"public/codepipeline/aws-codepipeline-s3-aws-codedeploy_linux.zip"
    },
    "OpsWorksBucketARN":{
      "Type":"String",
      "Description":"S3 bucket to use for artifacts. Just bucket Name; not URL. IAM user should have access to the bucket.",
      "Default":"arn:aws:s3:::pmd-opsworks-artifacts"
    }
  },
  "Resources":{
    "SNSLambdaRole":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Version":"2012-10-17",
          "Statement":[
            {
              "Effect":"Allow",
              "Principal":{
                "Service":[
                  "lambda.amazonaws.com"
                ]
              },
              "Action":[
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path":"/"
      }
    },
    "LambdaSNSExecutionPolicy":{
      "DependsOn":[
        "SNSLambdaRole"
      ],
      "Type":"AWS::IAM::Policy",
      "Properties":{
        "PolicyName":"LambdaRolePolicy",
        "Roles":[
          {
            "Ref":"SNSLambdaRole"
          }
        ],
        "PolicyDocument":{
          "Version":"2012-10-17",
          "Statement":[
            {
              "Effect":"Allow",
              "Action":[
                "logs:*"
              ],
              "Resource":[
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Effect":"Allow",
              "Action":[
                "sns:*"
              ],
              "Resource":[
                "*"
              ]
            }
          ]
        }
      }
    },
    "SNSLambdaFunction":{
      "Type":"AWS::Lambda::Function",
      "DependsOn":[
        "SNSLambdaRole",
        "LambdaSNSExecutionPolicy"
      ],
      "Properties":{
        "Code":{
          "S3Bucket":{
            "Ref":"S3Bucket"
          },
          "S3Key":"Archive.zip"
        },
        "Role":{
          "Fn::GetAtt":[
            "SNSLambdaRole",
            "Arn"
          ]
        },
        "Description":"Always return success",
        "Timeout":20,
        "Handler":"lambdadummy.handler",
        "Runtime":"nodejs",
        "MemorySize":128
      }
    },
    "MySNSTopic":{
      "Type":"AWS::SNS::Topic",
      "DependsOn":[
        "SNSLambdaFunction"
      ],
      "Properties":{
        "Subscription":[
          {
            "Endpoint":{
              "Fn::GetAtt":[
                "SNSLambdaFunction",
                "Arn"
              ]
            },
            "Protocol":"lambda"
          }
        ],
        "TopicName":{
          "Ref":"AWS::StackName"
        }
      }
    },
    "mysnspolicy":{
      "Type":"AWS::SNS::TopicPolicy",
      "DependsOn":[
        "MySNSTopic"
      ],
      "Properties":{
        "PolicyDocument":{
          "Id":"__default_policy_ID",
          "Version":"2012-10-17",
          "Statement":[
            {
              "Sid":"_s3",
              "Effect":"Allow",
              "Principal":{
                "AWS":"*"
              },
              "Action":"SNS:Publish",
              "Resource":{
                "Ref":"MySNSTopic"
              },
              "Condition":{
                "StringEquals":{
                  "aws:SourceArn":{
                    "Ref":"OpsWorksBucketARN"
                  }
                }
              }
            },
            {
              "Sid":"__default_statement_ID",
              "Effect":"Allow",
              "Principal":{
                "AWS":"*"
              },
              "Action":[
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:DeleteTopic",
                "SNS:GetTopicAttributes",
                "SNS:Publish",
                "SNS:RemovePermission",
                "SNS:AddPermission",
                "SNS:Receive",
                "SNS:SetTopicAttributes"
              ],
              "Resource":{
                "Ref":"MySNSTopic"
              },
              "Condition":{
                "StringEquals":{
                  "AWS:SourceOwner":{
                    "Ref":"AWS::AccountId"
                  }
                }
              }
            }
          ]
        },
        "Topics":[
          {
            "Ref":"MySNSTopic"
          }
        ]
      }
    }
  },
  "Outputs":{
    "MyAWSAccountId":{
      "Value":{
        "Ref":"AWS::AccountId"
      }
    },
    "SNSTopicARN":{
      "Value":{
        "Ref":"MySNSTopic"
      }
    },
    "SNSLambdaFunction":{
      "Value":{
        "Ref":"SNSLambdaFunction"
      }
    }
  }
}